plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'com.google.devtools.ksp'
    //id 'dagger.hilt.android.plugin'
    id 'com.google.dagger.hilt.android'
    // https://medium.com/@ruchiram4/android-create-a-library-project-and-publish-to-local-maven-repository-2141621dff1c
    // https://github.com/codepath/android_guides/wiki/Building-your-own-Android-library
    //id 'maven-publish'
}

android {
    namespace 'com.oborodulin.home.common'
    compileSdk cfg.sdk.compileVersion

    defaultConfig {
        minSdk cfg.sdk.minVersion
        targetSdk cfg.sdk.targetVersion

        // Desugaring: Required when setting minSdkVersion to 20 or lower
        // multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility cfg.jvm.compatibility.source
        targetCompatibility cfg.jvm.compatibility.target

        // Desugaring: Newer versions of the Android Gradle plugin (starting with 4.0) are able to use desugaring to
        // backport new APIs to older versions of Android.
        // You can read more about it here: https://jakewharton.com/d8-library-desugaring/
        // https://www.rockandnull.com/java-time-android/
        //coreLibraryDesugaringEnabled true
    }
    kotlin {
        sourceSets.configureEach {
            languageSettings {
                languageVersion = "2.0"
            }
        }
    }
    kotlinOptions {
        jvmTarget = cfg.jvm.target
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion versions.composeKotlinExt
    }
}
//kotlin {
//    sourceSets.all {
//        languageSettings {
//            languageVersion = "2.0"
//        }
//    }
//}
dependencies {
    // Logging
    implementation deps.logging.timber
    // implementation deps.logging.logger

    // Hilt
    implementation deps.dagger.hilt
    ksp deps.dagger.compiler
    implementation deps.hilt.navigationCompose

    implementation deps.coroutines.core
    implementation deps.jvm.inject
    implementation deps.kotlin.reflect

    // XML-parser
    implementation deps.xml.xmlpull

    // JSON
    implementation deps.json.kotlinx
    implementation deps.json.moshi
    implementation deps.json.moshiKotlin
    // implementation deps.google.gson

    // Compose
    def composeBom = platform(deps.compose.bom)
    implementation composeBom
    androidTestImplementation composeBom

    implementation deps.compose.uiBom
    implementation deps.compose.material3Bom
    //implementation deps.compose.iconsExtendedBom
    //implementation deps.compose.foundationBom
    implementation deps.compose.uiToolingBom
    implementation deps.compose.uiPreviewBom
    // Compose lifecycle
    implementation deps.lifecycle.runtimeCompose

    // i18n
    implementation deps.i18n.nv

    implementation deps.lifecycle.viewmodel

    implementation deps.androidx.coreKtx
    implementation deps.androidx.appcompat
    implementation deps.google.material

    // Compose preview
    debugImplementation deps.androidx.poolingcontainer

    // Secure
    //implementation deps.secure.argon2kt

    // Coil
    //implementation deps.coil.compose
    // Lottie
    //implementation deps.lottie.compose

    // Desugaring
    //coreLibraryDesugaring deps.tools.desugar

    // Testing dependencies
    testImplementation deps.test.junit
    androidTestImplementation deps.test.extJunit
    androidTestImplementation deps.test.espressoCore
}